<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Richard隨手筆記 - Python</title><link href="https://richardrobot.xyz/" rel="alternate"></link><link href="https://richardrobot.xyz/feeds/python.atom.xml" rel="self"></link><id>https://richardrobot.xyz/</id><updated>2021-12-01T09:58:00+08:00</updated><subtitle>紙上得來終覺淺，絕知此事要躬行</subtitle><entry><title>內容管理系統CMS</title><link href="https://richardrobot.xyz/2021/12/python-cms/" rel="alternate"></link><published>2021-12-01T09:58:00+08:00</published><updated>2021-12-01T09:58:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-12-01:/2021/12/python-cms/</id><summary type="html">&lt;p&gt;使用CMS系統建構網站&lt;/p&gt;</summary><content type="html">
&lt;h2 id="_1"&gt;需求&lt;a class="headerlink" href="#_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="djangocms-wagtailcms-orchardcodecms"&gt;DjangoCMS WagtailCMS  OrchardCodeCMS&lt;a class="headerlink" href="#djangocms-wagtailcms-orchardcodecms" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;需要建置一個快速的內容形象網站，最好的就是找CMS系統，以目前學的C#，還有新手Python程度，找到有幾個CMS來選擇&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OrchardCodeCMS&lt;/li&gt;
&lt;li&gt;WagtailCMS&lt;/li&gt;
&lt;li&gt;DjangoCMS&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最後選擇使用WagtailCMS來處理我的需求以及找到一個套件能快速建構內容網站。&lt;/p&gt;
&lt;h2 id="orchardcodecms"&gt;OrchardCodeCMS&lt;a class="headerlink" href="#orchardcodecms" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;使用ASP.&lt;span class="caps"&gt;NET&lt;/span&gt; Core 來建置CMS系統，.&lt;span class="caps"&gt;NET&lt;/span&gt; Core 目前還沒學到，而且我比較偏向使用Python來學習順便練習，但是這個OrchardCoreCMS內容功能蠻強大的，而且也蠻靈活的，由於NET Core 已經可以跨平臺，所以在我的Mac也可以建置。使用Visual Studio 2019 開啟，直接建置完成，啟動後，就直接一個設定頁面可以選擇，資料庫提供SQLite，&lt;span class="caps"&gt;SQL&lt;/span&gt; Server，還有一些基本的樣板，提供基本的Agency，Blog，ComingSoom 等的樣板。&lt;/p&gt;
&lt;p&gt;&lt;img alt="OrchardCodeCMS開始設定頁面.jpg" src="https://richardrobot.xyz/images/OrchardCodeCMS開始設定頁面.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="可以設定版型.jpg" src="https://richardrobot.xyz/images/可以設定版型.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pastedimage20211201104159.png" src="https://richardrobot.xyz/images/Pastedimage20211201104159.png"/&gt;&lt;/p&gt;
&lt;hr/&gt;
&lt;p&gt;節錄一下官方文件的重點：&lt;/p&gt;
&lt;p&gt;不同的網站建設策略¶
Orchard Core CMS支持所有主要的網站建設策略：&lt;/p&gt;
&lt;p&gt;完整的CMS。在這種模式下，網站使用主題和模板來呈現您的內容，目的是實現很少甚至沒有自定義開發。&lt;/p&gt;
&lt;p&gt;解耦CMS。除了內容管理後端之外，該網站一開始是空白。您可以使用Razor Pages或MVC操作創建所需的所有模板，並通過內容服務訪問內容。
參考：&lt;a href="https://www.youtube.com/watch?v=yWpz8p-oaKg"&gt;https://www.youtube.com/watch?v=yWpz8p-oaKg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;無頭CMS。該站點僅管理內容，並且您創建了一個單獨的應用程序，該應用程序將使用GraphQL或REST API來獲取託管內容。
參考：&lt;a href="https://www.youtube.com/watch?v=4o9zG17cfa0"&gt;https://www.youtube.com/watch?v=4o9zG17cfa0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解耦CMS比較適合拿來做客製化的樣板網站，對於OrchardCodeCMS功能的理解，另外鏈結一篇文章: &lt;a href="https://richardrobot.xyz/2021/12/orchardcode-cms/"&gt;OrchardCore CMS系統&lt;/a&gt; ，內容之多對於我只是想要簡單的內容展示形象網站似乎有點大，先放著以後再來學好了。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="djangocmswagtailcms"&gt;DjangoCMS與WagtailCMS&lt;a class="headerlink" href="#djangocmswagtailcms" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;DjangoCMS之前有稍微研究一下官方提供的測試後臺，玩了一下，對於我這個Python新手而言，還有操作上，覺得有點不直覺，後來就跑去看WagtailCMS，對於想要快速建構一個Blog或是小型形象網站，WagtailCMS似乎比較能夠達成我的需求，而且還不太會寫Python的我&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLMQHMcNi6ocsS8Bfnuy_IDgJ4bHRRrvub"&gt;https://www.youtube.com/playlist?list=PLMQHMcNi6ocsS8Bfnuy_IDgJ4bHRRrvub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Youtube上的Wagtail學習系列影片，相關的教學還蠻多的，個人覺得WagtailCMS，也還是需要一點程式底子去處理細微的修改，但是後來發現一個好套件。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/coderedcorp/coderedcms"&gt;CodeRed &lt;span class="caps"&gt;CMS&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這個RedCode像是Wagtail的加強版，把很多想要的功能都做好了，&lt;/p&gt;
&lt;p&gt;&lt;img alt="RedcodeCMS的功能項目.jpg" src="https://richardrobot.xyz/images/RedcodeCMS的功能項目.jpg"/&gt;&lt;/p&gt;
&lt;p&gt;一開始還不太懂架構的堆疊，後來摸熟之後，就像是在玩疊積木一樣，能夠快速的建立一個小站臺，非要說缺點就是要精確的調整樣式的話，會比較麻煩，若是有設計的人員可能比較好，基本上RedCode套件樣式是使用 &lt;a href="https://bootswatch.com/lux/"&gt;https://bootswatch.com/lux/&lt;/a&gt; 基本的版型。&lt;/p&gt;
&lt;p&gt;以上就是碰過的內容管理系統，各個架構都感覺不錯，各有長處，但是以本業是微軟方面的我，OrchardCodeCMS可以好好學學看，可以學到蠻多東西，而且 .&lt;span class="caps"&gt;NET&lt;/span&gt; Core 是微軟較新的技術，順便練習。&lt;/p&gt;</content><category term="Python"></category><category term="WagtailCMS"></category><category term="CodeRedCMS"></category></entry><entry><title>Python爬蟲程式錯誤</title><link href="https://richardrobot.xyz/2021/11/python-crawler-error/" rel="alternate"></link><published>2021-11-25T23:04:00+08:00</published><updated>2021-11-25T23:04:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-11-25:/2021/11/python-crawler-error/</id><summary type="html">&lt;p&gt;ConnectionResetError(54,&amp;#8217;Connection reset by&amp;nbsp;peer&amp;#8217;))&lt;/p&gt;</summary><content type="html">
&lt;h2 id="traceback"&gt;錯誤發生的Traceback&lt;a class="headerlink" href="#traceback" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/urllib3/response.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;438&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_error_catcher&lt;/span&gt;

 &lt;span class="k"&gt;yield&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/urllib3/response.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;767&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;read_chunked&lt;/span&gt;

 &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_handle_chunk&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/urllib3/response.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;711&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_handle_chunk&lt;/span&gt;

 &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_safe_read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/http/client.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;625&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_safe_read&lt;/span&gt;

 &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAXAMOUNT&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/socket.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;704&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;readinto&lt;/span&gt;

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_sock&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;recv_into&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/ssl.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1241&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;recv_into&lt;/span&gt;

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nbytes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/ssl.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1099&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;read&lt;/span&gt;

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_sslobj&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buffer&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="ne"&gt;ConnectionResetError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Errno&lt;/span&gt; &lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="n"&gt;Connection&lt;/span&gt; &lt;span class="n"&gt;reset&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;peer&lt;/span&gt;



&lt;span class="n"&gt;During&lt;/span&gt; &lt;span class="n"&gt;handling&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt; &lt;span class="n"&gt;occurred&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;



&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/requests/models.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;753&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt;

 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;chunk&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raw&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stream&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chunk_size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;decode_content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/urllib3/response.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;572&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;stream&lt;/span&gt;

 &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_chunked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;amt&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;decode_content&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;decode_content&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/urllib3/response.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;793&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;read_chunked&lt;/span&gt;

 &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_original_response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/contextlib.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;137&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="fm"&gt;__exit__&lt;/span&gt;

 &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gen&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;throw&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;typ&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/urllib3/response.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;455&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;_error_catcher&lt;/span&gt;

 &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ProtocolError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Connection broken: &lt;/span&gt;&lt;span class="si"&gt;%r&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;urllib3&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ProtocolError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Connection broken: ConnectionResetError(54, 'Connection reset by peer')"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ne"&gt;ConnectionResetError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Connection reset by peer'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;



&lt;span class="n"&gt;During&lt;/span&gt; &lt;span class="n"&gt;handling&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;above&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;another&lt;/span&gt; &lt;span class="n"&gt;exception&lt;/span&gt; &lt;span class="n"&gt;occurred&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;



&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/FileSource/batch_stock.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;

 &lt;span class="n"&gt;auto_update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'otc_cap_reduction'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;crawl_otc_cap_reduction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/FileSource/batch_stock.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;47&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;auto_update&lt;/span&gt;

 &lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;crawl_function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/finlab/crawlers/api.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;454&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;crawl_otc_cap_reduction&lt;/span&gt;

 &lt;span class="n"&gt;res4&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;urs_crawl_otc_cap_reduction&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/finlab/crawlers/helper.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;363&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;requests_get&lt;/span&gt;

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;args2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/requests/sessions.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;555&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;get&lt;/span&gt;

 &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'GET'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/requests/sessions.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;542&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;

 &lt;span class="n"&gt;resp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;send&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;send_kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/requests/sessions.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;697&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;send&lt;/span&gt;

 &lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/requests/models.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;831&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt;

 &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_content&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iter_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;CONTENT_CHUNK_SIZE&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="sa"&gt;b&lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;

 &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;"/Users/jarvis.zheng/miniforge3/envs/finlab/lib/python3.9/site-packages/requests/models.py"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;756&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt;

 &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="n"&gt;ChunkedEncodingError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ChunkedEncodingError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Connection broken: ConnectionResetError(54, 'Connection reset by peer')"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ne"&gt;ConnectionResetError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Connection reset by peer'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr/&gt;
&lt;h2 id="_1"&gt;問題原因&lt;a class="headerlink" href="#_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;參考：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/59851207/connectionreseterror-with-requests-module-raises-exception-inside-of-exception"&gt;帶有請求模塊的 ConnectionResetError 在異常內部引發異常，使程序崩潰&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由參考的資訊來看，我的發生也是依序發生&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ConnectionResetError: [Errno 54] Connection reset by peer&lt;/li&gt;
&lt;li&gt;urllib3.exceptions.ProtocolError: (“Connection broken: ConnectionResetError(54, ‘Connection reset by peer’)”, ConnectionResetError(54, ‘Connection reset by peer’))&lt;/li&gt;
&lt;li&gt;requests.exceptions.ChunkedEncodingError: (“Connection broken: ConnectionResetError(54, ‘Connection reset by peer’)”, ConnectionResetError(54, ‘Connection reset by peer’))&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由第三點的說明來看，是連線已經中斷了，而導致程式Crash，原本的程式在request的寫法&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ses&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;args2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ReadTimeout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ses&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;看來只有ConnectionError或Timeout才會被忽略，再新增&lt;code&gt;ConnectionResetError&lt;/code&gt; 再來觀察看看連線中斷的問題，避免程式因為斷線而Crash，在except內再重新request&lt;/p&gt;</content><category term="Python"></category><category term="ConnectionResetError"></category></entry><entry><title>使用Bokeh產生技術圖表</title><link href="https://richardrobot.xyz/2021/11/shi-yong-bokehchan-sheng-ji-shu-tu-biao/" rel="alternate"></link><published>2021-11-03T11:05:00+08:00</published><updated>2021-11-03T11:05:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-11-03:/2021/11/shi-yong-bokehchan-sheng-ji-shu-tu-biao/</id><summary type="html">&lt;p&gt;在Django上套用Bokeh產生技術圖表&lt;/p&gt;</summary><content type="html">&lt;blockquote&gt;
&lt;p&gt;參考資料：
&lt;a href="https://www.finlab.tw/bokeh-stock-chart-with-technical-analysis/"&gt;Bokeh 探索頻道(2)~客製化技術圖表升級&lt;/a&gt;
&lt;a href="https://www.jianshu.com/p/8b4f17950777"&gt;在 Django 上使用数据可视化利器&amp;nbsp;Bokeh&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="bokeh指標views圖.png" src="https://richardrobot.xyz/images/bokeh指標views圖.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;參考老師的Blog文章，內附的程式碼就可以無痛升級美麗圖表，但是我架設在Django上，需要調整一下來顯示在Django頁面。&lt;/p&gt;
&lt;p&gt;在Django的View.py&amp;nbsp;上收先引用：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.embed&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;components&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;bokeh.resources&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;CDN&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在程式加入Blog內的function來產生資料跟已經畫好的圖表，使用components，產生javascript與 html區塊，最後在render頁面帶入參數
&lt;img alt="bokeh指標views圖1.png" src="https://richardrobot.xyz/images/bokeh指標views圖1.png" /&gt;
&lt;img alt="bokeh指標views圖2.png" src="https://richardrobot.xyz/images/bokeh指標views圖2.png" /&gt;&lt;/p&gt;
&lt;p&gt;在Django的templates頁面上，下圖是圖表的Html的Div區塊
&lt;img alt="bokeh指標templates圖1.png" src="https://richardrobot.xyz/images/bokeh指標templates圖1.png" /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;下圖是在&lt;code&gt;script&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 區塊中，先引用bokeh的js，我直接下載到我的本機，避免版本到時候又變了壞掉，最後使用bokeh產生的的javascript語法。
&lt;img alt="bokeh指標templates圖2.png" src="https://richardrobot.xyz/images/bokeh指標templates圖2.png" /&gt;&lt;/p&gt;
&lt;p&gt;就可以產生美美的圖了
&lt;img alt="bokeh指標總圖.png" src="https://richardrobot.xyz/images/bokeh指標總圖.png" /&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="Bokeh"></category></entry><entry><title>Obsidian筆記同步到Blog排程</title><link href="https://richardrobot.xyz/2021/10/obsidian-to-pelican/" rel="alternate"></link><published>2021-10-01T09:26:00+08:00</published><updated>2021-10-01T09:26:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-10-01:/2021/10/obsidian-to-pelican/</id><summary type="html">&lt;p&gt;這個記錄着我製作Obsidian筆記同步到blog的語法&lt;/p&gt;</summary><content type="html">
&lt;h2 id="_1"&gt;緣起&lt;a class="headerlink" href="#_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;自從發現&lt;a href="https://richardrobot.xyz/2021/09/obsidian/"&gt;Obsidian&lt;/a&gt;這個東西之後，寫作筆記感覺很方便，而且使用Markdown語法，也剛好想建置Blog網站，用Python的Pelican套件，一樣是用Markdown來產生文章，就覺得兩個東西可以合併，既可以做筆記，又可以寫Blog。&lt;/p&gt;
&lt;hr/&gt;
&lt;h2 id="_2"&gt;想法&lt;a class="headerlink" href="#_2" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;obsidian的備份機制使用Github來完成，而且有套件可以自動Push
&lt;img alt="obsidian已安裝的第三方外掛.png" src="https://richardrobot.xyz/images/obsidian已安裝的第三方外掛.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://richardrobot.xyz/2021/10/git-netlify/"&gt;Blog發佈到netlify&lt;/a&gt; 也是用GitHub&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主要把Obsidian的MD檔同步到Pelican的content資料夾，再做一個發佈的程式就完成了&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="_3"&gt;流程：&lt;a class="headerlink" href="#_3" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Obsidian 的筆記寫完之後使用 &lt;code&gt;command + Shift  + P&lt;/code&gt; 快捷鍵Push到GitHub：ObsidianNote。 參考：   &lt;a href="https://richardrobot.xyz/2021/09/obsidiankuai-jie-jian-she-ding/"&gt;Obsidian快捷鍵設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;複製檔案到如下圖&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;右邊的 ==隨手筆記==資料夾 複製=&amp;gt; ==/Pelican/content 底下==
&lt;img alt="顯示同步資料夾.png" src="https://richardrobot.xyz/images/顯示同步資料夾.png"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;複製圖檔&lt;/li&gt;
&lt;li&gt;執行語法來生成頁面 &lt;code&gt;pelican content&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;git commit &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; push&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="Obsidian"></category><category term="Pelican"></category></entry><entry><title>Pelican說明Metadata</title><link href="https://richardrobot.xyz/2021/09/pelican-metadata/" rel="alternate"></link><published>2021-09-30T14:21:00+08:00</published><updated>2021-09-30T14:21:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-09-30:/2021/09/pelican-metadata/</id><summary type="html">&lt;p&gt;整理一個表格來方便查看Pelican的Metadata&lt;/p&gt;</summary><content type="html">&lt;hr /&gt;
&lt;p&gt;![[2021-10-01_PM4.46.58.png]]&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;您還可以在模板中使用自己的元數據鍵（只要它們不與保留的元數據關鍵字衝突）。下表包含保留的元數據關鍵字列表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;Metadata&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;title&lt;/td&gt;
&lt;td&gt;Title of the article or page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;date&lt;/td&gt;
&lt;td&gt;Publication date (e.g., &lt;span class="caps"&gt;YYYY&lt;/span&gt;-&lt;span class="caps"&gt;MM&lt;/span&gt;-&lt;span class="caps"&gt;DD&lt;/span&gt; &lt;span class="caps"&gt;HH&lt;/span&gt;:&lt;span class="caps"&gt;SS&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;modified&lt;/td&gt;
&lt;td&gt;Modification date (e.g., &lt;span class="caps"&gt;YYYY&lt;/span&gt;-&lt;span class="caps"&gt;MM&lt;/span&gt;-&lt;span class="caps"&gt;DD&lt;/span&gt; &lt;span class="caps"&gt;HH&lt;/span&gt;:&lt;span class="caps"&gt;SS&lt;/span&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;tags&lt;/td&gt;
&lt;td&gt;Content tags, separated by commas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;keywords&lt;/td&gt;
&lt;td&gt;Content keywords, separated by commas (&lt;span class="caps"&gt;HTML&lt;/span&gt; content only)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;category&lt;/td&gt;
&lt;td&gt;Content category (one only — not multiple)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;slug&lt;/td&gt;
&lt;td&gt;Identifier used in URLs and translations&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;author&lt;/td&gt;
&lt;td&gt;Content author, when there is only one&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;authors&lt;/td&gt;
&lt;td&gt;Content authors, when there are multiple&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;summary&lt;/td&gt;
&lt;td&gt;Brief description of content for index pages&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;lang&lt;/td&gt;
&lt;td&gt;Content language &lt;span class="caps"&gt;ID&lt;/span&gt; (en, fr, etc.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;translation&lt;/td&gt;
&lt;td&gt;If content is a translation of another (true or false)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;status&lt;/td&gt;
&lt;td&gt;Content status: draft, hidden, or published&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;template&lt;/td&gt;
&lt;td&gt;Name of template to use to generate content (without extension)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;save_as&lt;/td&gt;
&lt;td&gt;Save content to this relative file path&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;url&lt;/td&gt;
&lt;td&gt;&lt;span class="caps"&gt;URL&lt;/span&gt; to use for this article/page&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="Python"></category><category term="Pelican"></category></entry><entry><title>部落格建置-套件</title><link href="https://richardrobot.xyz/2021/09/pelican-plugins/" rel="alternate"></link><published>2021-09-29T15:50:00+08:00</published><updated>2021-09-29T15:50:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-09-29:/2021/09/pelican-plugins/</id><summary type="html">&lt;p&gt;要使用Pelican的外掛套件，目前套件的來源有兩種&lt;/p&gt;</summary><content type="html">&lt;p&gt;要使用Pelican的外掛套件，目前套件的來源有兩種：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在命名空間之下的Git，&lt;a href="https://github.com/pelican-plugins"&gt;新版pelican-plugins&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;舊版的套件集合的Git，&lt;a href="https://github.com/getpelican/pelican-plugins"&gt;舊版pelican-plugins&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;導入套件的方式有兩種：&amp;nbsp;如果您的插件不在可導入路徑中，您可以通過PLUGIN_PATHS設置指定路徑列表。如以下示例所示，PLUGIN_PATHS列表中的路徑可以是相對於設置文件的絕對路徑或相對路徑：&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pasted image 20210929155953.png" src="https://richardrobot.xyz/images/Pasted image 20210929155953.png" /&gt;&lt;/p&gt;
&lt;p&gt;若是沒有依照設定的套件名稱放置程式會出現錯誤訊息：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;Pelican&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nx"&gt;jarvis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;zheng&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="nx"&gt;zhengruichangdeMac&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;mini&lt;/span&gt; &lt;span class="nx"&gt;Pelican&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="nx"&gt;pelican&lt;/span&gt; &lt;span class="nx"&gt;content&lt;/span&gt;
&lt;span class="nx"&gt;WARNING&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="nx"&gt;s&lt;/span&gt; &lt;span class="nx"&gt;usage&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nx"&gt;CATEGORY_FEED_ATOM&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;deprecated&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;use&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;slug&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;instead&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nx"&gt;ERROR&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Cannot&lt;/span&gt; &lt;span class="nx"&gt;load&lt;/span&gt; &lt;span class="nx"&gt;plugin&lt;/span&gt; &lt;span class="sb"&gt;`related_posts`&lt;/span&gt;
  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nx"&gt;Cannot&lt;/span&gt; &lt;span class="kr"&gt;import&lt;/span&gt; &lt;span class="nx"&gt;plugin&lt;/span&gt; &lt;span class="sb"&gt;`related_posts`&lt;/span&gt;
&lt;span class="nx"&gt;Done&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Processed&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt; &lt;span class="nx"&gt;articles&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;drafts&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;hidden&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="nx"&gt;and&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nx"&gt;draft&lt;/span&gt; &lt;span class="nx"&gt;pages&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="mf"&gt;0.20&lt;/span&gt; &lt;span class="nx"&gt;seconds&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="_1"&gt;總結&lt;a class="headerlink" href="#_1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;套件的使用，在命名空間下的，要執行安裝語法，會直接搜尋環境下的套件程式，若是用舊版的，要去舊版git&amp;nbsp;去clone下來，並且對照名稱放程式資料夾在/pelican-plugins&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Python"></category><category term="Pelican"></category></entry><entry><title>部落格建置</title><link href="https://richardrobot.xyz/2021/09/pelican/" rel="alternate"></link><published>2021-09-28T17:44:00+08:00</published><updated>2021-09-28T17:44:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2021-09-28:/2021/09/pelican/</id><summary type="html">&lt;p&gt;用Pelican套件建置部落格在GitHub Pages&amp;nbsp;上，首先需要安裝Pelican的環境&lt;/p&gt;</summary><content type="html">&lt;h4 id="pelicangithub-pages-pelican"&gt;用Pelican套件建置部落格在GitHub Pages 上，首先需要安裝Pelican的環境&lt;a class="headerlink" href="#pelicangithub-pages-pelican" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;建立python的虛擬環境
&lt;code&gt;conda create -n Pelican&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;啓動虛擬環境
&lt;code&gt;conda activate Pelican&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="caps"&gt;CD&lt;/span&gt;&amp;nbsp;到新開的資料夾，&lt;/p&gt;
&lt;p&gt;當初已經在GitHub上建立好了Repository，所以就在本機建立資料夾然後Clone，在Pelican資料夾下，需要安裝pelican的相關套件，需要創建一個requirements.txt文件&lt;/p&gt;
&lt;p&gt;&lt;code&gt;touch requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接下來安裝所有套件：
&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;若是還沒建立好預設開始環境需要執行以下語法，Pelican會建立基本的程式與資料夾，若是執行以下語法會需要回答一些預設環境的設定值
&lt;code&gt;pelican-quickstart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;資料夾架構如下
&lt;img alt="Pasted image 20210929144934.png" src="https://richardrobot.xyz/images/Pasted image 20210929144934.png" /&gt;&amp;nbsp;每個文件的用途：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;content/ -&amp;nbsp;存儲所有網站內容的目錄&lt;/li&gt;
&lt;li&gt;task.py -&amp;nbsp;幫助我們自動化網站生成和發布的腳本&lt;/li&gt;
&lt;li&gt;output/ - 存儲生成的靜態網站的 &lt;span class="caps"&gt;HTML&lt;/span&gt;&amp;nbsp;文件的目錄&lt;/li&gt;
&lt;li&gt;pelicanconf.py -&amp;nbsp;包含網站所有配置的文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="_1"&gt;生成網站&lt;a class="headerlink" href="#_1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;此語法會在 output/ 目錄產生所有html 的頁面
&lt;code&gt;pelican content&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此語法會產生一個臨時的站臺 127.0.0.1:8000 可以預覽頁面
&lt;code&gt;pelican --listen&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看外掛套件清單：
&lt;code&gt;pelican-plugins&lt;/code&gt;&lt;/p&gt;</content><category term="Python"></category><category term="Pelican"></category></entry></feed>