<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Richard隨手筆記 - 類別</title><link href="https://richardrobot.xyz/" rel="alternate"></link><link href="https://richardrobot.xyz/feeds/lei-bie.atom.xml" rel="self"></link><id>https://richardrobot.xyz/</id><updated>2022-01-11T22:07:00+08:00</updated><subtitle>紙上得來終覺淺，絕知此事要躬行</subtitle><entry><title>Fetch語法對Instagram的CORS問題</title><link href="https://richardrobot.xyz/2022/01/cors-in-js-fix/" rel="alternate"></link><published>2022-01-11T22:07:00+08:00</published><updated>2022-01-11T22:07:00+08:00</updated><author><name>Richard</name></author><id>tag:richardrobot.xyz,2022-01-11:/2022/01/cors-in-js-fix/</id><summary type="html">&lt;p&gt;Pelican的樣板。有提供一個功能在頁面可以嵌入&amp;nbsp;Instagram的PO文，使用方式就只需要定義一個DIV在Markdown的檔案中就可以嵌入&lt;/p&gt;</summary><content type="html">
&lt;p&gt;Pelican的樣板：  &lt;a href="https://github.com/Pelican-Elegant"&gt;Pelican-Elegant&lt;/a&gt;。有提供一個功能在頁面可以嵌入 Instagram的PO文，使用方式就只需要定義一個DIV在Markdown的檔案中就可以嵌入，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"elegant-instagram"&lt;/span&gt; &lt;span class="na"&gt;data-instagram-id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"BwWo35fAcR3"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其中，data-instagram-id就是Instagram上面PO文時的連結路徑，不過使用過後出現CORS問題，在Github上面Issues也有
&lt;a href="https://github.com/Pelican-Elegant/elegant/issues/664"&gt;[&lt;span class="caps"&gt;BUG&lt;/span&gt;] Instagram code doesn’t work, browser shows blocked url because of policy&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nx"&gt;Access&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="nx"&gt;at&lt;/span&gt; &lt;span class="s1"&gt;'https://www.instagram.com/p/YYYYYYYY/?__a=1'&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="nx"&gt;origin&lt;/span&gt; &lt;span class="s1"&gt;'https://MYURL'&lt;/span&gt; &lt;span class="nx"&gt;has&lt;/span&gt; &lt;span class="nx"&gt;been&lt;/span&gt; &lt;span class="nx"&gt;blocked&lt;/span&gt; &lt;span class="nx"&gt;by&lt;/span&gt; &lt;span class="nx"&gt;CORS&lt;/span&gt; &lt;span class="nx"&gt;policy&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;No&lt;/span&gt; &lt;span class="s1"&gt;'Access-Control-Allow-Origin'&lt;/span&gt; &lt;span class="nx"&gt;header&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;present&lt;/span&gt; &lt;span class="nx"&gt;on&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;requested&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="nx"&gt;If&lt;/span&gt; &lt;span class="nx"&gt;an&lt;/span&gt; &lt;span class="nx"&gt;opaque&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="nx"&gt;serves&lt;/span&gt; &lt;span class="nx"&gt;your&lt;/span&gt; &lt;span class="nx"&gt;needs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;set&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="s1"&gt;'s mode to '&lt;/span&gt;&lt;span class="nx"&gt;no&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nx"&gt;cors&lt;/span&gt;&lt;span class="err"&gt;'&lt;/span&gt; &lt;span class="nx"&gt;to&lt;/span&gt; &lt;span class="nx"&gt;fetch&lt;/span&gt; &lt;span class="nx"&gt;the&lt;/span&gt; &lt;span class="nx"&gt;resource&lt;/span&gt; &lt;span class="kd"&gt;with&lt;/span&gt; &lt;span class="nx"&gt;CORS&lt;/span&gt; &lt;span class="nx"&gt;disabled&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;

&lt;span class="nx"&gt;Instagram&lt;/span&gt; &lt;span class="nx"&gt;gallery&lt;/span&gt; &lt;span class="nx"&gt;is&lt;/span&gt; &lt;span class="nx"&gt;not&lt;/span&gt; &lt;span class="nx"&gt;shown&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;由建議處理方式是fetch 加上 mode:’no-cors’&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;instagramId&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;ele&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;dataset&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;instagramId&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sb"&gt;`https://www.instagram.com/p/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nx"&gt;instagramId&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;/?__a=1`&lt;/span&gt;&lt;span class="p"&gt;,{&lt;/span&gt;&lt;span class="nx"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;"no-cors"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;雖然不會出現CORS的問題了，但是IG的API回應卻是302 &lt;/p&gt;
&lt;p&gt;&lt;img alt="使用CORS後API變302回應.png" src="https://richardrobot.xyz/images/使用CORS後API變302回應.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="已經修改fetch模式是nocors.png" src="https://richardrobot.xyz/images/已經修改fetch模式是nocors.png"/&gt;&lt;/p&gt;
&lt;p&gt;由於Response回應302，所以後續就直接錯誤了，認為應該是用fetch API去呼叫，會跳轉到IG的Login畫面，API是無法呈現的所以後續無法轉JSON格式，看來是需要增加access token變成登入狀態&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;access-control-expose-headers: X-IG-Set-WWW-Claim&lt;/span&gt;
&lt;span class="err"&gt;alt-svc: h3=":443"; ma=3600,h3-29=":443"; ma=3600&lt;/span&gt;
&lt;span class="err"&gt;cache-control: private, no-cache, no-store, must-revalidate&lt;/span&gt;
&lt;span class="err"&gt;content-language: zh-tw&lt;/span&gt;
&lt;span class="err"&gt;content-length: 0&lt;/span&gt;
&lt;span class="err"&gt;content-security-policy: report-uri https://www.instagram.com/security/csp_report/; default-src 'self' https://www.instagram.com; img-src data: blob: https://*.fbcdn.net https://*.instagram.com https://*.cdninstagram.com https://*.facebook.com https://*.fbsbx.com https://*.giphy.com; font-src data: https://*.fbcdn.net https://*.instagram.com https://*.cdninstagram.com; media-src 'self' blob: https://www.instagram.com https://*.cdninstagram.com https://*.fbcdn.net; manifest-src 'self' https://www.instagram.com; script-src 'self' https://instagram.com https://www.instagram.com https://*.www.instagram.com https://*.cdninstagram.com wss://www.instagram.com https://*.facebook.com https://*.fbcdn.net https://*.facebook.net 'unsafe-inline' 'unsafe-eval' blob:; style-src 'self' https://*.www.instagram.com https://www.instagram.com 'unsafe-inline'; connect-src 'self' https://instagram.com https://www.instagram.com https://*.www.instagram.com https://graph.instagram.com https://*.graph.instagram.com https://i.instagram.com/graphql_www https://graphql.instagram.com https://*.cdninstagram.com https://api.instagram.com https://i.instagram.com https://*.i.instagram.com wss://www.instagram.com wss://edge-chat.instagram.com https://*.facebook.com https://*.fbcdn.net https://*.facebook.net chrome-extension://boadgeojelhgndaghljhdicfkmllpafd blob:; worker-src 'self' blob: https://www.instagram.com; frame-src 'self' https://instagram.com https://www.instagram.com https://*.instagram.com https://staticxx.facebook.com https://www.facebook.com https://web.facebook.com https://connect.facebook.net https://m.facebook.com; object-src 'none'; upgrade-insecure-requests&lt;/span&gt;
&lt;span class="err"&gt;content-type: text/html; charset=utf-8&lt;/span&gt;
&lt;span class="err"&gt;date: Wed, 12 Jan 2022 06:27:35 GMT&lt;/span&gt;
&lt;span class="err"&gt;expires: Sat, 01 Jan 2000 00:00:00 GMT&lt;/span&gt;
&lt;span class="err"&gt;location: https://www.instagram.com/accounts/login/&lt;/span&gt;
&lt;span class="err"&gt;pragma: no-cache&lt;/span&gt;
&lt;span class="err"&gt;set-cookie: mid=Yd501wALAAE2tYIXNpy3T6lgubqt; Domain=.instagram.com; expires=Fri, 12-Jan-2024 06:27:35 GMT; Max-Age=63072000; Path=/; Secure&lt;/span&gt;
&lt;span class="err"&gt;set-cookie: ig_did=B725DF97-76E5-4F3A-915A-366CD821B3A9; Domain=.instagram.com; expires=Fri, 12-Jan-2024 06:27:35 GMT; HttpOnly; Max-Age=63072000; Path=/; Secure&lt;/span&gt;
&lt;span class="err"&gt;set-cookie: ig_nrcb=1; Domain=.instagram.com; expires=Thu, 12-Jan-2023 06:27:35 GMT; Max-Age=31536000; Path=/; Secure&lt;/span&gt;
&lt;span class="err"&gt;strict-transport-security: max-age=31536000&lt;/span&gt;
&lt;span class="err"&gt;vary: Accept-Language, Cookie&lt;/span&gt;
&lt;span class="err"&gt;x-aed: 48&lt;/span&gt;
&lt;span class="err"&gt;x-content-type-options: nosniff&lt;/span&gt;
&lt;span class="err"&gt;x-fb-trip-id: 1679558926&lt;/span&gt;
&lt;span class="err"&gt;x-frame-options: SAMEORIGIN&lt;/span&gt;
&lt;span class="err"&gt;x-ig-origin-region: prn&lt;/span&gt;
&lt;span class="err"&gt;x-ig-push-state: c2&lt;/span&gt;
&lt;span class="err"&gt;x-ig-request-end-time: 1939701098&lt;/span&gt;
&lt;span class="err"&gt;x-ig-request-start-time: 1939701061.9430351&lt;/span&gt;
&lt;span class="err"&gt;x-xss-protection: 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;目前似乎無法針對 302 問題解決。若是做登入IG後，再次GET資料，雖然會有200的正常狀態，但是其實返回的物件是一個 &lt;code&gt;status:0&lt;/code&gt; 的情況， 參考了這篇： &lt;a href="https://ithelp.ithome.com.tw/articles/10249967"&gt;Fetch 的使用注意事項&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="IG回應的資歷形態.png" src="https://richardrobot.xyz/images/IG回應的資歷形態.png"/&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*引用：&lt;/p&gt;
&lt;p&gt;很多人會認為只要將 fetch 裡的屬性 mode，調整成 &lt;code&gt;mode: 'no-cors'&lt;/code&gt;，就可以避免 &lt;span class="caps"&gt;CORS&lt;/span&gt;，其實不是！
&lt;code&gt;mode: 'no-cors&lt;/code&gt; 在設定上的意義是，告訴瀏覽器，我本來就知道 server 對於這個 request 是沒有設定可以存取 &lt;span class="caps"&gt;CORS&lt;/span&gt; 的，我本來就拿不到 response，我設定&lt;code&gt;mode: 'no-cors&lt;/code&gt;，是為了，就算無法存取，也不要跑到 .catch() 那邊，讓它出現 Error。
一樣拿不到 server 的 response，但會拿到一個 &lt;code&gt;status: 0&lt;/code&gt; 的 response。*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="cors-server-cors-response"&gt;結論：在 &lt;span class="caps"&gt;CORS&lt;/span&gt; 的限制底下，只有 server 開放 &lt;span class="caps"&gt;CORS&lt;/span&gt; 存取，你才拿得到 response，如果沒有開放，就一定拿不到。&lt;a class="headerlink" href="#cors-server-cors-response" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;參考資料：&lt;/p&gt;
&lt;p&gt;https://www.ithome.com.tw/voice/129558&lt;/p&gt;
&lt;p&gt;https://shubo.io/what-is-cors/&lt;/p&gt;
&lt;p&gt;https://sa123.cc/mbz87ag1594xka2ohlgj.html&lt;/p&gt;
&lt;p&gt;https://codertw.com/%E7%A8%8B%E5%&lt;span class="caps"&gt;BC&lt;/span&gt;%8F%E8%&lt;span class="caps"&gt;AA&lt;/span&gt;%9E%E8%A8%80/750548/&lt;/p&gt;</content><category term="類別"></category><category term="CORS"></category></entry></feed>